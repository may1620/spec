ENV.defaultStringPatternFlags = 2

ner = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$NamedEntityTagAnnotation" }
tokens = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation" }

$TRIG_OP = (
	/sin/|
	/sine/|
	/cos/|
	/cosine/|
	/tan/|
	/tangent/

)

$COMPARATIVE = (
	/less/ /than/|
	/greater/ /than/|
	/equal/ /to/|
	/less/ /than/ /or/ /equal/ /to/|
	/greater/ /than/ /or/ /equal/ /to/|
	/is/ /negative/|
	/is/ /positive/|
	/is/ /zero/
)

$EMPTY = (
	/is/ /empty/
)

$NULL = (
	/null/
)



ENV.defaults["ruleType"] = "tokens"
ENV.defaults["stage"] = 1
{
  pattern: ( $TRIG_OP ), 
  action: ( Annotate($0, ner, "TRIG_OP")),
  stage: 1 
}

ENV.defaults["ruleType"] = "tokens"
ENV.defaults["stage"] = 2
{
  pattern: ( $COMPARATIVE ), 
  action: ( Annotate($0, ner, "COMPARATIVE")),
  stage: 2 
}

ENV.defaults["ruleType"] = "tokens"
ENV.defaults["stage"] = 3
{
  pattern: ( $NULL ), 
  action: ( Annotate($0, ner, "NULL")),
  stage: 3 
}

ENV.defaults["ruleType"] = "tokens"
ENV.defaults["stage"] = 3
{
  pattern: ( $EMPTY ), 
  action: ( Annotate($0, ner, "EMPTY")),
  stage: 4 
}

ENV.defaults["stage"] = 5
{
  ruleType: "tokens",
  pattern: ( [{ner:PARAMETER}] /is/ [{ner:NULL}]),
  result: Format("@requires %s == null", $0[0].value)
}

ENV.defaults["stage"] = 6
{
  ruleType: "tokens",
  pattern: ( [{ner:OBJECT_REFERENCE}] [{ner:EMPTY}]),
  result: Format("@requires %s.size() == 0", $0[0].value)
}